name: Build RedVelvet APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Create missing Capacitor files
      run: |
        # Create the directory structure
        mkdir -p android/capacitor-cordova-android-plugins
        
        # Create cordova.variables.gradle
        cat > android/capacitor-cordova-android-plugins/cordova.variables.gradle << 'EOF'
// DO NOT EDIT THIS FILE! IT IS GENERATED EACH TIME "capacitor update" IS RUN
ext {
  cdvMinSdkVersion = project.hasProperty('minSdkVersion') ? rootProject.ext.minSdkVersion : 23
  // Plugin gradle extensions can append to this to have code run at the end.
  cdvPluginPostBuildExtras = []
  cordovaConfig = [:]
}
EOF
        
        # Verify file was created
        echo "✅ Created cordova.variables.gradle:"
        ls -la android/capacitor-cordova-android-plugins/
        cat android/capacitor-cordova-android-plugins/cordova.variables.gradle
        
    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          android/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradle wrapper executable
      run: chmod +x android/gradlew
      
    - name: Clean and build APK
      run: |
        cd android
        ./gradlew clean
        ./gradlew assembleDebug
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: redvelvet-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Create GitHub release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_number }}
        name: RedVelvet APK Build ${{ github.run_number }}
        body: |
          ## RedVelvet AI Companion APK - AI Chat Issue FIXED
          
          ✅ **AI Chat Response Issue Fixed**  
          ✅ **Proper Error Handling for Diamond Depletion**  
          ✅ **Java Compilation Errors Resolved**  
          ✅ **Server Live and Tested Working**  
          
          ### What Was Fixed
          - Android APK now properly handles ALL server responses
          - Clear error messages when diamonds are exhausted
          - Fixed "no response received from AI" issue
          - Removed duplicate error handling code
          
          ### Installation Instructions
          1. Download `app-debug.apk` from this release
          2. Enable "Unknown sources" in Android settings
          3. Install APK and start chatting with AI companions
          
          ### Verified Working Features
          - AI chat responses with diamond deduction (25 diamonds welcome bonus)
          - Device-based diamond tracking across app restarts
          - WhatsApp-style mobile chat interface
          - Proper error messages for network/diamond issues
          - Server connection: https://red-velvet-connection.replit.app
        files: android/app/build/outputs/apk/debug/app-debug.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}