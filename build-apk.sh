#!/bin/bash
# RedVelvet APK Build Script
# Production-ready Android APK with version control

# Get current version
VERSION=$(node -p "require('./version.json').version")
echo "🚀 Building RedVelvet Android APK v$VERSION..."

# Sync web assets to Android
npx cap sync android

# Update Android app version
cd android
echo "📋 Setting APK version to v$VERSION"
sed -i "s/versionName \".*\"/versionName \"$VERSION\"/" app/build.gradle

# Create local.properties for Android SDK location
echo "📋 Setting up Android SDK configuration..."
cat > local.properties << EOF
## This file is automatically generated by build-apk.sh
## Do not edit this file -- YOUR CHANGES WILL BE ERASED!
#
# Location of the android SDK. This is only used by Gradle.
# For customization when using a Version Control System, please read the
# header note.
# Android SDK not available in Replit environment
# Building requires local Android SDK setup
EOF

# Build APK
echo "📱 Attempting APK generation..."
echo "⚠️  Note: Android APK build requires local Android SDK setup"
echo "📱 For now, the web app is fully functional with all mobile features"
echo ""
echo "🔧 To build APK locally:"
echo "1. Install Android Studio"
echo "2. Set ANDROID_HOME environment variable"
echo "3. Run: ./build-apk.sh"
echo ""
echo "✅ Web version includes: AI chat, diamond system, mobile UI, back button handling"

# Try to build anyway - might work with different Replit setups
./gradlew assembleDebug

# Rename APK with version
if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
    mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/RedVelvet-v$VERSION.apk
    echo "✅ APK Generated: android/app/build/outputs/apk/debug/RedVelvet-v$VERSION.apk"
else
    echo "❌ APK build failed"
    exit 1
fi

echo "🔧 Includes: AI chat, diamond system, fixed back button, keyboard handling"